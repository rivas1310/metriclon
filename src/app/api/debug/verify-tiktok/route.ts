import { NextRequest, NextResponse } from 'next/server';
import { prisma } from '@/lib/prisma';

export const dynamic = 'force-dynamic';

export async function GET(request: NextRequest) {
  try {
    console.log('=== VERIFICACI√ìN FINAL DE TIKTOK ===');
    
    // 1. Verificar TikTok en la organizaci√≥n correcta
    const correctOrgTikTok = await prisma.channel.findFirst({
      where: {
        platform: 'TIKTOK',
        organizationId: '997693ca-8304-464e-87a9-ccb22b576724'
      },
      select: {
        id: true,
        platform: true,
        name: true,
        organizationId: true,
        isActive: true,
        accessToken: true,
        createdAt: true,
        updatedAt: true
      }
    });

    // 2. Verificar que no haya TikTok en la organizaci√≥n incorrecta
    const wrongOrgTikTok = await prisma.channel.findFirst({
      where: {
        platform: 'TIKTOK',
        organizationId: 'ceeba04f-60c4-4162-b22d-e7469ad8da93'
      }
    });

    // 3. Verificar todos los canales de la organizaci√≥n correcta
    const correctOrgChannels = await prisma.channel.findMany({
      where: {
        organizationId: '997693ca-8304-464e-87a9-ccb22b576724'
      },
      select: {
        id: true,
        platform: true,
        name: true,
        isActive: true
      }
    });

    // 4. An√°lisis de verificaci√≥n
    const verification = {
      tiktokInCorrectOrg: !!correctOrgTikTok,
      tiktokInWrongOrg: !!wrongOrgTikTok,
      totalChannelsInCorrectOrg: correctOrgChannels.length,
      platformsInCorrectOrg: correctOrgChannels.map(c => c.platform),
      status: correctOrgTikTok && !wrongOrgTikTok ? '‚úÖ PERFECTO' : '‚ùå PROBLEMA DETECTADO'
    };

    console.log('Verificaci√≥n final:', verification);

    return NextResponse.json({
      success: true,
      message: 'VERIFICACI√ìN FINAL DE TIKTOK',
      verification,
      correctOrgTikTok,
      wrongOrgTikTok,
      correctOrgChannels,
      recommendations: [
        correctOrgTikTok ? '‚úÖ TikTok est√° en la organizaci√≥n correcta' : '‚ùå TikTok NO est√° en la organizaci√≥n correcta',
        !wrongOrgTikTok ? '‚úÖ No hay TikTok en la organizaci√≥n incorrecta' : '‚ùå TikTok est√° en la organizaci√≥n incorrecta',
        correctOrgTikTok ? 'üéØ TikTok deber√≠a aparecer en el modal "Crear Nuevo Post"' : 'üîß Conectar TikTok desde la organizaci√≥n correcta'
      ]
    });

  } catch (error) {
    console.error('Error en verificaci√≥n final:', error);
    return NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, { status: 500 });
  }
}
